package dao;import android.content.ContentValues;import android.content.Context;import android.database.Cursor;import android.database.sqlite.SQLiteDatabase;import android.util.Log;import java.sql.Date;import java.util.ArrayList;import java.util.List;import model.StickNote;import model.Usuario;/** * Created by dodo on 21/05/16. */public class StickNoteDao {    private DataBaseHelper dataBaseHelper;    private SQLiteDatabase database;    public StickNoteDao (Context context){        dataBaseHelper = new DataBaseHelper(context);    }    public StickNote getStickNoteToModel(Cursor cursor){        StickNote stickNoteRetorno = new StickNote();        stickNoteRetorno.setId(cursor.getInt(cursor.getColumnIndex(DataBaseHelper.SQLStickNotes.ID)));        stickNoteRetorno.setTitulo(cursor.getString(cursor.getColumnIndex(DataBaseHelper.SQLStickNotes.TITULO)));        stickNoteRetorno.setNota(cursor.getString(cursor.getColumnIndex(DataBaseHelper.SQLStickNotes.NOTA)));        //stickNoteRetorno.setDtCriacao(Date.valueOf(cursor.getString(cursor.getColumnIndex(DataBaseHelper.SQLStickNotes.DT_CRIACAO))));        return stickNoteRetorno;    }    private SQLiteDatabase getDatabase(){        if(database == null){            database = dataBaseHelper.getWritableDatabase();        }        return database;    }    public List<StickNote> listarStickNotesPend(){        Cursor cursor = getDatabase().query(DataBaseHelper.SQLStickNotes.TABELA,                DataBaseHelper.SQLStickNotes.COLUNAS,                " ind_concluido = 0", null,null,null,null        );        List<StickNote> listaRetorno = new ArrayList<>();        while (cursor.moveToNext()){            StickNote stickNote = getStickNoteToModel(cursor);            listaRetorno.add(stickNote);        }        return listaRetorno;    }    public long saveStickNote(StickNote stickNote){        ContentValues dados = new ContentValues();        dados.put(DataBaseHelper.SQLStickNotes.TITULO,stickNote.getTitulo());        dados.put(DataBaseHelper.SQLStickNotes.NOTA, stickNote.getNota());        dados.put(DataBaseHelper.SQLStickNotes.IND_CONCLUIDO, stickNote.getIndConcluido());        if(stickNote.getId() > 0){            return getDatabase().update(DataBaseHelper.SQLStickNotes.TABELA, dados,                    " _id = ?", new String[] { String.valueOf(stickNote.getId()) });        }        else{            return getDatabase().insert(DataBaseHelper.SQLStickNotes.TABELA,null,dados);        }    }    public boolean deleteStickNote(int id){        return getDatabase().delete(DataBaseHelper.SQLStickNotes.TABELA,                " _id = ? ", new String[] { Integer.toString(id) }) > 0;    }    public StickNote getStickNoteById(int id){        StickNote stickNoteRetorno = new StickNote();        Cursor cursor = getDatabase().query(DataBaseHelper.SQLStickNotes.TABELA,                DataBaseHelper.SQLStickNotes.COLUNAS, " _id = ?", new String[] { Integer.toString(id)},null,null,null);        if(cursor.moveToNext()){            stickNoteRetorno = getStickNoteToModel(cursor);        }        return stickNoteRetorno;    }    public void closeConn(){        database.close();        database = null;    }    public List<StickNote> listarStickNotesOK() {        Cursor cursor = getDatabase().query(DataBaseHelper.SQLStickNotes.TABELA,                DataBaseHelper.SQLStickNotes.COLUNAS,                " ind_concluido = 1", null,null,null,null        );        List<StickNote> listaRetorno = new ArrayList<>();        while (cursor.moveToNext()){            StickNote stickNote = getStickNoteToModel(cursor);            listaRetorno.add(stickNote);        }        return listaRetorno;    }}